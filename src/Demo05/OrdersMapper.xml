<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Demo05.OrdersMapperCustom">

<!--    定义resultMap-->
<resultMap id="orders" type="Demo05.Orders">
    <id column="id" property="id"></id>
    <result column="user_id" property="user_id"></result>
    <result column="number" property="number"></result>
    <result column="createtime" property="createTime"></result>
    <result column="note" property="note"></result>


<!--    配置映射的关联用户信息
association：用于映射查询关联单个对象的信息
property：将关联的用户信息映射到相关属性
javaType：要被映射到的类

-->
    <association property="user" javaType="Demo01.User">
        <id property="id" column="id"></id>
        <result column="name" property="name"></result>
        <result column="birthday" property="birthday"></result>
        <result column="password" property="password"></result>
    </association>
</resultMap>
    
    
<!--    一对一查询-->
    <select id="findOrdersUser" resultType="Demo05.OrdersCustom">
        select orders.*,
        user.name,user.password,user.birthday
        from
        orders,
        user
        where orders.user_id = user.id

    </select>

    <select id="findOrdersUserResultMap" resultMap="orders">
        select orders.*,
        user.name,user.password,user.birthday
        from
        orders,
        user
        where orders.user_id = user.id

    </select>

<!--    继承一个resultMap-->
<resultMap id="ordersAndOrdersDetail" type="Demo05.Orders" extends="orders">

<!--    订单明细信息
需要使用collection: 将查询到的多条信息映射到集合当中
ofType: 映射到集合属性的POJO中
-->
    <collection property="orderDetails" ofType="Demo05.OrderDetail">
    <id column="orderDetails_id" property="id"></id>
    <result property="items_id" column="items_id"></result>
    <result property="orders_id" column="orders_id"></result>
    </collection>

</resultMap>

<!--    一对多查询-->
<select id="findOrdersAndOrdersDetails" resultMap="ordersAndOrdersDetail">
     select orders.*,
        user.name,user.password,user.birthday,
        orderdetail.id orderDetails_id,
        orderdetail.items_id,
        orderdetail.orders_id
        from
        orders,
        user,
        orderdetail
        where orders.user_id = user.id and orderdetail.orders_id = orders.id

</select>

<!--    多对多查询-->
<!--    映射思路：
     在user类中添加list<orders> orders
     在orders类中添加list<orderdetials> orderdetial
     在orderDetails类中添加items属性

    -->
<resultMap id="MToM" type="Demo01.User">
<!--用户信息-->
    <id property="id" column="id"></id>
    <result property="name" column="name"></result>
    <result property="birthday" column="birthday"></result>
    <result property="password" column="password"></result>

<!--    订单信息，一个用户对应多个订单-->

    <collection property="orders" ofType="Demo05.Orders">
        <id property="id" column="id"></id>
        <result column="user_id" property="user_id"></result>
        <result column="number" property="number"></result>
        <result column="createtime" property="createTime"></result>
        <result column="note" property="note"></result>

<!--        一个订单对应多个订单明细-->
        <collection property="orderDetails" ofType="Demo05.OrderDetail">
            <id property="id" column="id"></id>
            <result property="items_id" column="items_id"></result>
            <result property="orders_id" column="orders_id"></result>

<!--            一个商品明细对应一个商品-->
            <association property="items" javaType="Demo05.Items">
                <id property="id" column="id"></id>
                <result property="name" column="name"></result>
                <result property="price" column="price"></result>
                <result property="detail" column="detail"></result>
                <result property="pic" column="pic"></result>
            </association>
        </collection>
    </collection>


</resultMap>
    <select id="findUserAndOrderDetials" resultMap="MToM">
select orders.*,
        user.name,user.password,user.birthday,
        orderdetail.id orderDetails_id,
        orderdetail.items_id,
        orderdetail.orders_id,
        items.name,
        items.detail
        from
        orders,
        user,
        orderdetail,
        items
        where orders.user_id = user.id and orderdetail.orders_id = orders.id and orderdetail.items_id = items.id
    </select>
    
</mapper>